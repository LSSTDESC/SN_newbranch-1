@startuml

!include skinparams.iuml
!include updateable_frag.iuml
!include likelihood_frag.iuml



Updateable <|-down- Likelihood

abstract class GaussianFamily {
  +GaussianFamily(stats : Statistics)
  +{final} compute_chisq(cosmo : ccl.Cosmology) : double
  - {final} _update(params : ParamsDict)
  - {abstract} _update_gaussian_family(params : ParamsDict)
}

note right of GaussianFamily::compute_chisq
  <i>compute_chisq<i> is to be called by derived
  classes in their implementation of <i>compute</i>
end note

note left of GaussianFamily::_update
  <i>_update</i> updates <i>systematics</i>.
  Derived classes must implement
  <i>_update_gaussian_family</i>.
end note

class UpdateableCollection <<Statistic>> {}

GaussianFamily *-- UpdateableCollection : systematics

Likelihood <|-down- GaussianFamily

class ConstGaussian {
  + {final} compute(cosmo : ccl.Cosmology)
  - {final} _update_gaussian_family(params : ParamsDict)
}
note left of ConstGaussian::_update_gaussian_family
  This function does nothing.
end note

class StudentT {
  + StudentT(stats : Statistics, nu : double)
  + {final} compute(cosmo : ccl.Cosmology)
  - {final} _update_gaussian_family(params : ParamsDict)
}


GaussianFamily <|--down- ConstGaussian

GaussianFamily <|--down- StudentT

@enduml
