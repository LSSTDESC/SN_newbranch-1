@startuml

!include skinparams.iuml
!include updateable_frag.iuml

class ParamsDict <<dictionary>> { }
note top
  Map of <i>string</i>
  to <i>float</i>
end note


class Statistics << List[Statistic] >> { }

abstract class Likelihood {
  + {abstract} read(data : sacc.Sacc) : None
  + {abstract} compute(cosmo : ccl.Cosmology)
}

Updateable <|-down- Likelihood

abstract class ChiSquaredLikelihood {
  +ChiSquaredLikelihood(stats : Statistics)
  -{final} compute_chisq(cosmo : ccl.Cosmology) : double
  - _update(params : ParamsDict)
}


class UpdateableCollection <<Statistic>> {}

ChiSquaredLikelihood *-- UpdateableCollection

Likelihood <|-down- ChiSquaredLikelihood

class GaussianLikelihood {
  + {final} compute(cosmo : ccl.Cosmology)
}

class StudentTLikelihood {
  + StudentTLikelihood(stats : Statistics, nu : double)
  + {final} compute(cosmo : ccl.Cosmology)
  - _update(params : ParamsDict)
}


ChiSquaredLikelihood <|--down- GaussianLikelihood

ChiSquaredLikelihood <|--down- StudentTLikelihood

@enduml
